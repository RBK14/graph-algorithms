# Nie należy zmieniać lokalizacji pliku konfiguracyjnego
# Testowe tablice powinny być umieszczane w folderze files/test

# Tryb działania programu [simulation/test]
# simulation: Program uruchamiany jest w trybie symulacji, tablice są generowane a wyniki zapisywane do pliku
# test: Program jest uruchamiany w trybie testowym, wykorzystywany jest pierwszy z podanych algorytmów i pierwszy rozmiar tablicy
mode = simulation

# Typ danych wczytywanych z pliku lub generowanych przez program [int/float/double]
data_type = int

# Algorytmy sortowania [insertion/quick/heap/shell]
# W trybie symulacji można podać kilka algorytmów (wyniki zostaną zapisane w jednym pliku)
# W trybie testowania program posortuje tablice tylko pierwszym podanym algorytmem
sorting_algorithms = insertion

# Początkowa pozycja pivota podczas sortowania danych za pomocą algorytmu Quick Sort [left/right/middle/random]
quicksort_pivot_position = left

# Wzór pozwalający utworzyć algorytm sortowania shella [shell/sedgewick]
# shell: floor(N/2^k)
# sedgewick: 4^k+3*2^k+1, na początku 1
shellsort_gap_sequence = shell

# Tryb testowania umożliwiający wczytanie tablicy z pliku lub ostatniej tablicy oraz wygenerowanie tablicy w trybie testowym [read/generate/last]
# read: Program odczytuje tablicę z pliku do którego ścieżka jest podawana w opcji test_data_file_path
# generate: Program generuje tablice danych korzystając z ustawień array_sizes oraz generation_mode
# last: Program wczytuje ostatnią tablicę utworzoną dla podanego rozmiaru tablicy i typu danych
test_mode = generate

# Ścieżka względna dla pliku zawierającego dane do testowania programu
# Opcja nie dotyczy następującej konfiguracji: mode = simulation/last oraz test_mode = read
test_data_file_path = ../files/test/data.txt

# Sposób generowania danych [random/sorted_33/sorted_66/sorted_asc/sorted_desc]
# random: Dane są generowane losowo
# sorted_33: 33% tablicy jest już posortowane
# sorted_66: 66% tablicy jest już posortowane
# sorted_asc: Tablica jest posortowana rosnąco
# sorted_desc: Tablica jest posortowana malejąco
generation_mode = random

# Rozmiary oraz ilość tablic dla których generowane będą dane w trybie symulacji
# W trybie symulacji można podać kilka rozmiarów tablic (wyniki zostaną zapisane w jednym pliku)
# W trybie testowania program wygeneruje dane tylko dla pierwszego podanego rozmiaru tablicy
array_sizes = 10000, 20000, 30000, 40000, 50000, 60000, 70000